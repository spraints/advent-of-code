#!/usr/bin/env ruby
#/ Usage: ./run [YYYY DD]
#/ Run all scripts for the specified day of Advent of Code.
#/ Default is today.
#/
#/ For example, for day 1 of 2020, you might name inputs like:
#/  2020/examples/01.simple.txt
#/  2020/examples/01.complex.txt
#/  2020/input/01.txt
#/ And scripts like:
#/  2020/01.rb
#/  2020/py/01.py

# todos:
# - auto download examples and inputs.

def main(year, day)
  inputs = []
  scripts = []
  Dir["**/*"].each do |file|
    case typeof(file, year: year, day: day)
    when :input
      inputs << file
    when :script
      scripts << file
    end
  end
  inputs.each do |input|
    puts "======= #{input} ======="
    scripts.each do |script|
      puts ">>> #{script} < #{input}"
      run script: script, input: input
      puts ""
    end
  end
end

def run(script:, input:)
  case File.extname(script)
  when ".rb"
    system "ruby", script, in: input
  when ".py"
    system "python3", script, in: input
  else
    puts "Unrecognized script extension."
  end
end

def typeof(file, year:, day:)
  parts = file.split("/")
  return :wrong_year unless parts.any? { |part| part.to_i == year }
  return :wrong_day  unless parts.any? { |part| part.to_i == day  }
  return :input if parts.include?("input") || parts.include?("examples")
  return :script
end

if ARGV.empty?
  now = Time.now
  main(now.year, now.day)
  exit 0
end

if ARGV.size != 2 || ARGV[0].size != 4 || ARGV[1].size != 2
  File.readlines(__FILE__).grep(/^#\//).each { |line| puts line[3..-1] }
  exit 1
end

main(*ARGV.map(&:to_i))
